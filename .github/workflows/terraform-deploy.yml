name: Terraform Infrastructure Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev' # Define o ambiente padrão como dev

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var-file=terraform/variables.tfvars -var-file=terraform/${{ github.event.inputs.environment }}/main.tf

      # Aguarda a aprovação manual antes de prosseguir
      - name: Wait for approval
        if: github.event_name == 'workflow_dispatch'
        run: echo "Aprovação necessária. Clique no botão 'Run workflow' e em seguida 'Run workflow' novamente para confirmar."

      # Aplica as alterações apenas após a aprovação manual
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # Obter os outputs do Terraform
      - name: Get Terraform Outputs
        run: |
          terraform output -json > terraform_output.json
          echo "::set-env name=TF_OUTPUTS::$(cat terraform_output.json)"

      # Salva o estado do Terraform no bucket do Google Cloud Storage
      - name: Save Terraform state
        run: |
          terraform state push -lock=false gs://${{ env.TF_OUTPUTS.bucket_name }}/terraform.tfstate
